/******************************************************************
Stylesheet: Mixins & Constants Stylesheet

This is where you can take advantage of Sass' great features:
Mixins & Constants. I won't go in-depth on how they work exactly,
there are a few articles below that will help do that. What I will
tell you is that this will help speed up simple changes like
changing a color or adding CSS3 techniques gradients.
******************************************************************/

/*********************
CLEARFIXIN'
*********************/

// Contain floats: nicolasgallagher.com/micro-clearfix-hack/
.clearfix,
.cf {
  zoom: 1;
	&:before, &:after { content: ""; display: table; }
	&:after { clear: both; }
}


//Screen Size Presets (this can be adjusted or added to if necessary)
//USAGE: The below example checks for anything lower than 768px and hides the #hero div with a display:none property
// #hero{
//	@include breakpoint($screen-md-min){display:none} 
// }
//

$screen-sm-min: 768px;
$screen-md-min: 992px;
$screen-lg-min: 1200px;

@mixin breakpoint($point) {
  @if $point == $screen-sm-min {
    @media screen and (max-width: $screen-sm-min) { @content; }
  }
  @elseif $point == $screen-md-min {
    @media screen and (max-width: $screen-md-min) { @content; }
  }
  @elseif $point == $screen-lg-min {
    @media screen and (max-width: $screen-lg-min) { @content; }
  }
}

/*
use the best ampersand
http://simplebits.com/notebook/2008/08/14/ampersands-2/
*/
span.amp {
  font-family: Baskerville,'Goudy Old Style',Palatino,'Book Antiqua',serif !important;
  font-style: italic;
}


/*********************
TRANSITION
*********************/
/*
You'll need to be using Sass 3.2+ for these to work.
Thanks to @anthonyshort for the inspiration on these.
USAGE: @include transition(all 0.2s ease-in-out);
*/

@mixin transition($transition...) {
	// defining prefixes so we can use them in mixins below
	$prefixes:      ("-webkit",  "");
  @each $prefix in $prefixes {
    #{$prefix}-transition: $transition;
  }

  transition: $transition;
  
  //fix for flickering in webkit
  -webkit-perspective: 1000;
  -webkit-backface-visibility: hidden;
}

/*********************
OPACITY
adds an opacity to an HTML element
USAGE:  @include opacity(.8,80);
*********************/
@mixin opacity($perc:1.0, $percfull:100){
	zoom: 1;
	filter: alpha(opacity=$percfull);
	opacity: $perc;
}

/*********************
VENDOR PREFIX
allows us to add one line of code that works accross all the browsers for CCS3 elements
USAGE:  @include vendor-prefix('border-radius', '6px');
*********************/
@mixin vendor-prefix($name, $value) {
  @each $vendor in ('-webkit-', '-moz-', '-ms-', '-o-', '') {
    #{$vendor}#{$name}: #{$value};
  }
}

/*********************
HTML LIST ITEM WITH NOT LIST STYLE 
removes the list-style settings from an HTML list
USAGE:  @include listNoStyle
*********************/

@mixin listNoStyle{
	list-style-type:none;
	margin:0;
	padding:0;	
	display:inline-block;
}


/*********************
CSS3 GRADIENTS
Be careful with these since they can
really slow down your CSS. Don't overdo it.
This is a great tool for creating CSS gradients:  http://www.colorzilla.com/gradient-editor/
*********************/

/* @include css-gradient(#dfdfdf,#f8f8f8); */
@mixin css-gradient($from: #dfdfdf, $to: #f8f8f8) {
	background-color: $to;
	background-image: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
	background-image: -webkit-linear-gradient(top, $from, $to);
	background-image: -moz-linear-gradient(top, $from, $to);
	background-image: -o-linear-gradient(top, $from, $to);
	background-image: linear-gradient(to bottom, $from, $to);	
	background: -ms-linear-gradient(left, $from ,$to);
	filter: progid:DXImageTransform.Microsoft.Gradient(GradientType=1, startColorstr='#3f1d69', endColorstr='#9fc54d');
	-ms-filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#3f1d69', endColorstr='#9fc54d');
}

/* @include css-gradient(#dfdfdf,0%, #f8f8f8, 80%); */
@mixin css-gradient-two-vertical($left: #dfdfdf, $lperc:0%, $right: #f8f8f8, $rtperc:100%) {
	background: $left; /* Old browsers */
	/* IE9 SVG, needs conditional override of 'filter' to 'none' */
	background: -moz-linear-gradient(top,  $left $lperc, $right $rtperc); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, right bottom, color-stop($lperc,$left), color-stop($rtperc,$right)); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(top,  $left $lperc, $right $rtperc); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(top,  $left $lperc, $right $rtperc); /* Opera 11.10+ */
	background: -ms-linear-gradient(top,  $left $lperc, $right $rtperc); /* IE10+ */
	background: linear-gradient(to bottom,  $left $lperc, $right $rtperc); /* W3C */
	filter: progid:DXImageTransform.Microsoft.Gradient(GradientType=0, startColorstr='$left', endColorstr='$right');
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$left', endColorstr='$right',GradientType=0 ); /* IE6-8 */
}

/* @include css-gradient(#dfdfdf,0%, #f8f8f8, 80%); */
@mixin css-gradient-three-horizontal($from: #dfdfdf, $to: #f8f8f8) {
	background-color: $to;
	background-image: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
	background-image: -webkit-linear-gradient(top, $from, $to);
	background-image: -moz-linear-gradient(top, $from, $to);
	background-image: -o-linear-gradient(top, $from, $to);
	background-image: linear-gradient(to bottom, $from, $to);	
	background: -ms-linear-gradient(left, $from ,$to);
	filter: progid:DXImageTransform.Microsoft.Gradient(GradientType=1, startColorstr='#3f1d69', endColorstr='#9fc54d');
	-ms-filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#3f1d69', endColorstr='#9fc54d');
}

/* @include css-gradient(#dfdfdf,0%, #f8f8f8, 20%, #000000, 20%, #f8f8f8, 90%); */
@mixin css-gradient-four-horizontal($left: #dfdfdf, $lperc: 0%, $m1:#000000, $m1perc:50%, $m2:#000000, $m2perc:50%, $right: #f8f8f8, $rtperc:100%) {
	background: $left; /* Old browsers */
	/* IE9 SVG, needs conditional override of 'filter' to 'none' */
	background: -moz-linear-gradient(left,  $left $lperc, $m1 $m1perc, $m2 $m2perc, $right $rtperc); /* FF3.6+ */
	background: -webkit-gradient(linear, left top, right top, color-stop($lperc,$left), color-stop($m1,$m1perc), color-stop($m2,$m2perc), color-stop($rtperc,$right)); /* Chrome,Safari4+ */
	background: -webkit-linear-gradient(left,  $left $lperc, $m1 $m1perc, $m2 $m2perc, $right $rtperc); /* Chrome10+,Safari5.1+ */
	background: -o-linear-gradient(left,  $left $lperc, $m1 $m1perc, $m2 $m2perc, $right $rtperc); /* Opera 11.10+ */
	background: -ms-linear-gradient(left,  $left $lperc, $m1 $m1perc, $m2 $m2perc, $right $rtperc); /* IE10+ */
	background: linear-gradient(to right,  $left $lperc, $m1 $m1perc, $m2 $m2perc, $right $rtperc); /* W3C */
	filter: progid:DXImageTransform.Microsoft.Gradient(GradientType=1, startColorstr='$left', endColorstr='$right');
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$left', endColorstr='$right',GradientType=1 ); /* IE6-8 */
}

/*********************
BORDER RADIUS
USAGE:  @include border-radius-fourcorners(10px)
*********************/
@mixin border-radius-fourcorners($radius: 20px) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	border-radius: $radius;
}

/*********************
TRANSFORM
rotate USAGE:  @include rotate(20deg)
scale USAGE:  @include scale(1.3)
*********************/
@mixin rotate($degrees: 20deg) {
	-webkit-transform: rotate($degrees);
	-moz-transform:  rotate($degrees);
	-ms-transform:   rotate($degrees);
	-o-transform:    rotate($degrees);
	transform:       rotate($degrees);
}

@mixin scale($perc: 1.2) {
	-webkit-transform: scale($perc);
	  -moz-transform:  scale($perc);
	  -ms-transform:   scale($perc);
	  -o-transform:    scale($perc);
	  transform:       scale($perc);
}